-- --------------------------------------------------------
-- 主机:                           etl.cma5jkozme68.rds.cn-north-1.amazonaws.com.cn
-- 服务器版本:                        5.6.27-log - MySQL Community Server (GPL)
-- 服务器操作系统:                      Linux
-- HeidiSQL 版本:                  9.3.0.4984
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 导出 tkiochange 的数据库结构
CREATE DATABASE IF NOT EXISTS `tkiochange` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `tkiochange`;


-- 导出  表 tkiochange.engine_baseetl 结构
CREATE TABLE IF NOT EXISTS `engine_baseetl` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) NOT NULL,
  `description` longtext NOT NULL,
  `template` longtext NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_baseetl 的数据：3 rows
DELETE FROM `engine_baseetl`;
/*!40000 ALTER TABLE `engine_baseetl` DISABLE KEYS */;
INSERT INTO `engine_baseetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(1, 'tkio_mid_clk_normal_day', 'tkio_mid_clk_normal_day', 'insert overwrite table tkio.tkio_mid_clk_normal_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect /*+ MAPJOIN(b) */ \r\n       a.deviceid,\r\n       a.channelid,\r\n       a.channelname,\r\n       a.cid,\r\n       cast(substr(a.clk_time,0,10)+28800 as int) clk_time,\r\n       a.ip,\r\n       a.is_white_list,\r\n       if((a.rn <= nvl(b.normalclicknumbers,30) and a.is_white_list=0) or (is_white_list=1),1,0) is_normal,\r\n       a.subchannel\r\n    from\r\n  \r\n(select ds,\r\n       appid,\r\n       nvl(upper(xcontext[\'deviceid\']),0)  as deviceid,\r\n       nvl(xcontext[\'ip\'],0)  as ip,\r\n       row_number()over(partition by appid,nvl(xcontext[\'ip\'],0) order by  nvl(xcontext[\'timestamp\'],0)) rn,\r\n       nvl(xcontext[\'channelid\'],0)  as channelid,\r\n       nvl(xcontext[\'channelname\'],0)  as channelname,\r\n       -- 白名单标记\r\n       if(nvl(xcontext[\'channelname\'],0) in (\'gdt\', \'uctoutiao\', \'domob\',\'oneway\',\'ucliulanqi\',\r\n        \'aduu\',\'maimengmanhua\',\'weixinmp\',\'zht\',\'zhtwl\'  ,\'chukong\',\'chukong2\',\'toutiao\'  ),1,0) as is_white_list,\r\n       nvl(xcontext[\'timestamp\'],0)  as clk_time,\r\n       nvl(xcontext[\'cid\'],0) as cid,\r\n       nvl(xcontext[\'subchannel\'],0) as subchannel\r\n    from trackdefault.click\r\n    where xwhat=\'click\' and \r\n          appid =\'$appid\' and \r\n          ds =\'$ds\' and \r\n          xcontext[\'channelid\'] is not null and \r\n          lower(xcontext[\'channelid\'])!=\'abcd\'\r\n)  a \r\n\r\nleft join\r\n\r\n(select  appid,\r\n        normalclicknumbers\r\n    from trackparams.params\r\n    where ds=\'$ds\' and \r\n          appid=\'$appid\'\r\n) b on a.appid=b.appid\r\n', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_baseetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(2, 'tkio_tmp_install_day', 'tkio_tmp_install_day', 'insert overwrite table tkio.tkio_tmp_install_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       ins_today.deviceid,\r\n       ins_today.install_time,\r\n       ins_today.install_ip,\r\n       ins_today.idfa,\r\n       ins_today.imei,\r\n       ins_today.mac,\r\n       ins_today.android_id,\r\n       ins_today.is_norm_install\r\n\r\nfrom \r\n\r\n(select /*+ MAPJOIN(b) */ a.appid,\r\n      a.deviceid,\r\n      a.install_time,\r\n      if(lower(a.install_ip)=\'unknown\',\'0\',a.install_ip) as install_ip ,\r\n      if(lower(a.idfa)=\'unknown\',\'0\',a.idfa) as idfa,\r\n      if(lower(a.imei)=\'unknown\',\'0\',a.imei) as imei,\r\n      if(lower(a.mac)=\'unknown\',\'0\',a.mac) as mac,\r\n      if(lower(a.android_id)=\'unknown\',\'0\',a.android_id) as android_id,\r\n      if(a.ip_rn <= nvl(b.normalinstallnumbers,30),1,0) as is_norm_install\r\n   from \r\n ( select appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       unix_timestamp(xwhen) as install_time,\r\n       nvl(xcontext[\'ip\'],0) as install_ip,\r\n       nvl(xcontext[\'idfa\'],0) as idfa,\r\n       nvl(xcontext[\'imei\'],0) as imei,\r\n       nvl(xcontext[\'mac\'],0) as mac,\r\n       nvl(xcontext[\'androidid\'],0) as android_id,\r\n       row_number()over(partition by appid,nvl(xcontext[\'ip\'],0) order by unix_timestamp(xwhen)) as  ip_rn,\r\n       row_number()over(partition by appid,xcontext[\'deviceid\'] order by unix_timestamp(xwhen))  as today_install_rn\r\n     from trackdefault.events2\r\n     where appid =\'$appid\' and \r\n          ds =\'$ds\' and  xwhat=\'install\' and \r\n          xcontext[\'deviceid\'] is not null\r\n          and xcontext[\'deviceid\'] !=\'00000000-0000-0000-0000-000000000000\'\r\n ) a\r\n\r\nleft join \r\n\r\n (  select appid,\r\n           normalinstallnumbers\r\n         from trackparams.params\r\n         where ds=\'$ds\' and \r\n              appid=\'$appid\'\r\n ) b on a.appid=b.appid\r\n\r\n where a.today_install_rn=1\r\n\r\n) as ins_today\r\n\r\n\r\nleft join \r\n\r\n( select /*+ MAPJOIN(b) */ x.appid,\r\n        x.deviceid\r\n   from \r\n      ( select appid,\r\n               deviceid,\r\n               datediff(\'$ds\',ds) as ins_diff_day\r\n           from tkio.tkio_mid_install_day\r\n           where appid =\'$appid\' and \r\n                ds between date_sub(\'$ds\',90) and date_sub(\'$ds\',1)\r\n      ) x\r\n\r\n    left join \r\n\r\n     ( select appid,\r\n             installsubdays\r\n        from trackparams.params\r\n        where ds=\'$ds\' and \r\n             appid=\'$appid\'\r\n     ) y on x.appid=y.appid\r\n where  x.ins_diff_day <=nvl(y.installsubdays,30)\r\n) as ins_history on ins_today.appid=ins_history.appid and ins_today.deviceid=ins_history.deviceid\r\n\r\nwhere ins_history.appid is null', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_baseetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(11, 'tkio_med_dau_detail_day,tkio_med_dau_user_info', 'segments', 'from \r\n\r\n(select xwho, \r\n       ds,\r\n       collect_set(xwhat) as dau_segments\r\n    from default.segments2\r\n    where ds = \'$ds\' and \r\n      appid=\'$appid\' and \r\n      xwho is not null and xwhat!=\'\'\r\n    group by xwho,ds\r\n) as a \r\n\r\nfull join \r\n\r\n(select xwho,\r\n       first_ds,\r\n       first_dau_segments\r\n   from tkio.tkio_med_dau_user_info\r\n   where ds= date_sub(\'$ds\',1) and \r\n         appid=\'$appid\' and \r\n         xwho is not null \r\n) as b  on a.xwho=b.xwho\r\n\r\n\r\ninsert overwrite table tkio.tkio_med_dau_detail_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect nvl(b.xwho,a.xwho) as xwho,\r\n       nvl(b.first_ds,a.ds) as first_ds,\r\n       nvl(b.first_dau_segments,a.dau_segments) as first_dau_segments,\r\n       datediff(\'$ds\',nvl(b.first_ds,a.ds)) as dau_diff,\r\n       a.dau_segments as dau_segments\r\n    where a.ds is not null \r\n\r\ninsert overwrite table tkio.tkio_med_dau_user_info partition(ds=\'$ds\',appid=\'$appid\')\r\nselect nvl(b.xwho,a.xwho) as xwho,\r\n       nvl(b.first_ds,a.ds) as first_ds,\r\n       nvl(b.first_dau_segments,a.dau_segments) as first_dau_segments;', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
/*!40000 ALTER TABLE `engine_baseetl` ENABLE KEYS */;


-- 导出  表 tkiochange.engine_cumulativesetl 结构
CREATE TABLE IF NOT EXISTS `engine_cumulativesetl` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) NOT NULL,
  `description` longtext NOT NULL,
  `template` longtext NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_cumulativesetl 的数据：4 rows
DELETE FROM `engine_cumulativesetl`;
/*!40000 ALTER TABLE `engine_cumulativesetl` DISABLE KEYS */;
INSERT INTO `engine_cumulativesetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(1, 'tkio_mid_install_day', 'tkio', 'set hive.auto.convert.join=true;\r\nset hive.ignore.mapjoin.hint=false;\r\nset hive.mapjoin.smalltable.filesize=300000000;\r\n\r\ninsert overwrite table tkio.tkio_mid_install_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       norm_join.deviceid,\r\n       nvl(adwords_join.channelid,norm_join.channelid) as channelid,\r\n       nvl(adwords_join.channelname,norm_join.channelname) as channelname,\r\n       nvl(adwords_join.cid,norm_join.cid) as cid,\r\n       nvl(adwords_join.is_norm_install,norm_join.is_norm_install) as is_norm_install,\r\n       nvl(adwords_join.ins_datetime,norm_join.ins_datetime) as ins_datetime,\r\n       nvl(adwords_join.ins_ip,norm_join.ins_ip) as ins_ip,\r\n       nvl(adwords_join.clk_datetime,norm_join.clk_datetime) as clk_datetime,\r\n       nvl(adwords_join.clk_ip,norm_join.clk_ip) as clk_ip,\r\n       nvl(adwords_join.join_type,norm_join.join_type) as join_type,\r\n       nvl(norm_join.subchannel,\'-2\') as subchannel\r\n\r\nfrom \r\n(\r\nselect appid,\r\n       deviceid,\r\n       channelid,\r\n       channelname,\r\n       cid,\r\n       from_unixtime(cast(ins_datetime as int)) as ins_datetime,\r\n       ins_ip,\r\n       is_norm_install,\r\n       cast(clk_time as int),\r\n       from_unixtime(cast(clk_time as int)),\r\n       if(clk_time=0,0,from_unixtime(cast(clk_time as int)) ) as clk_datetime,\r\n       clk_ip,\r\n       join_type,\r\n       subchannel\r\nfrom (\r\n\r\nselect src_ins.appid,\r\n       src_ins.deviceid,\r\n       src_ins.ins_ip,\r\n       src_ins.is_norm_install,\r\n       src_ins.ins_datetime,\r\n       nvl(src_clk.channelid,\'_default_\') as  channelid,\r\n       nvl(src_clk.channelname,\'_default_\') as channelname,\r\n       nvl(src_clk.cid,\'-1\') as  cid,\r\n       nvl(src_clk.clk_ip,0) as  clk_ip,\r\n       nvl(src_clk.clk_time,0) as  clk_time,\r\n       if(isnull(src_clk.appid),\'0\',src_ins.join_type) as join_type,\r\n       nvl(src_clk.subchannel,\'-1\') as subchannel,\r\n       row_number() over(partition by src_ins.appid,src_ins.deviceid order by nvl(src_clk.clk_time,0) desc ) as clk_sort_id\r\n from  \r\n (  select /*+ MAPJOIN(b) */ a.appid,\r\n       a.deviceid,\r\n       a.channelid,\r\n       a.channelname,\r\n       a.cid,\r\n       a.ip as clk_ip,\r\n       a.clk_time,\r\n       a.clk_time+ nvl(b.cilag,5) as max_ins_time,\r\n       a.subchannel\r\n     from\r\n        (select appid,\r\n               deviceid,\r\n               channelid,\r\n               channelname,\r\n               cid,\r\n               clk_time,\r\n               ip,\r\n               datediff(\'$ds\',ds) as clk_diff_day,\r\n               subchannel\r\n            from tkio.tkio_mid_clk_normal_day\r\n            where ds between date_sub(\'$ds\',31) and \'$ds\' and \r\n                  appid=\'$appid\' and \r\n                  is_normal=1\r\n        ) a\r\n     left join    \r\n        (select appid,cilag,ciday\r\n            from trackparams.params\r\n            where ds=\'$ds\' and \r\n                  appid=\'$appid\'\r\n        ) b on a.appid=b.appid\r\n     where a.clk_diff_day <= b.ciday\r\n\r\n ) src_clk\r\n\r\nright join\r\n\r\n (  select  appid,\r\n            deviceid,\r\n            ins_datetime,\r\n            ins_ip,\r\n            is_norm_install,\r\n            join_type,\r\n            join_id\r\n     from (\r\n        select appid,\r\n              deviceid,\r\n              ins_datetime,\r\n              ins_ip,\r\n              is_norm_install,\r\n              map(  \'deviceid\',deviceid,\r\n                    \'ip\',ins_ip,\r\n                    \'md5_idfa\',upper(md5(upper(idfa))),\r\n                    \'md5_imei\',upper(md5(lower(imei))) ,\r\n                    \'md5_android_id\',upper(md5(lower(android_id))) ,\r\n                    \'sha_idfa\',upper(sha1(idfa)) ,\r\n                    \'sha_android_id\',upper(sha1(android_id)),\r\n                    \'mac\',if(mac=\'02:00:00:00:00:00\',0,mac),\r\n                    \'android_id\',upper(android_id)) as join_array\r\n           from tkio.tkio_tmp_install_day \r\n           where ds=\'$ds\' and \r\n                 appid=\'$appid\'\r\n        ) t1 lateral view explode(t1.join_array) lat_view as join_type,join_id\r\n     where join_id not in(\'0\', upper(md5(\'0\')), upper(sha1(\'0\')),upper(md5(0)), upper(sha1(0))  )\r\n ) src_ins on src_clk.appid=src_ins.appid and src_clk.deviceid=src_ins.join_id\r\n\r\nwhere src_clk.max_ins_time <= src_ins.ins_datetime or src_clk.max_ins_time is null\r\n\r\ndistribute by src_ins.appid,src_ins.deviceid\r\nsort by src_ins.appid,src_ins.deviceid,nvl(clk_time,0) desc \r\n\r\n) final where clk_sort_id=1\r\n\r\n\r\n) as norm_join\r\n\r\n\r\nleft join \r\n\r\n(\r\nselect appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       xcontext[\'channelid\'] as channelid ,\r\n       xcontext[\'channelname\'] as channelname  , \r\n       \'-2\' as cid,\r\n       \'1\' as is_norm_install,\r\n       xwhen as ins_datetime,\r\n       xcontext[\'ip\'] as ins_ip,\r\n       from_unixtime( (cast (substr(xcontext[\'click_timestamp\'],0,10)+28800 as int) )) as clk_datetime,\r\n       \'0\' as clk_ip,\r\n       \'adwords\' as join_type \r\n   from trackdefault.events2\r\n   where  appid=\'$appid\' \r\n          and ds=\'$ds\' and xwhat=\'attribute\'   \r\n          and xcontext[\'channelname\']=\'adwords\'\r\n) as adwords_join \r\non norm_join.appid=adwords_join.appid and \r\n    norm_join.deviceid=adwords_join.deviceid and \r\n    norm_join.channelid=\'_default_\';\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rlt_install_history_info partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       nvl(a.deviceid,b.deviceid) as deviceid,\r\n       nvl(a.channelid,b.channelid) as channelid,\r\n       nvl(a.channelname,b.channelname) as channelname,\r\n       nvl(a.cid,b.cid) as cid,\r\n       if(isnull(a.deviceid),\'$ds\',b.ins_date) as ins_date,\r\n       nvl(a.ins_datetime,b.ins_datetime) as ins_datetime,\r\n       nvl(a.ins_ip,b.ins_ip) as ins_ip,\r\n       nvl(a.clk_datetime,b.clk_datetime) as clk_datetime,\r\n       nvl(a.clk_ip,b.clk_ip) as clk_ip,\r\n       nvl(a.join_type,b.join_type) as join_type,\r\n       nvl(a.subchannel,b.subchannel) as subchannel\r\n    from\r\n(select * \r\n   from tkio.tkio_mid_install_day\r\n   where appid=\'$appid\' and \r\n         ds=\'$ds\' and is_norm_install=1\r\n) a\r\n\r\nfull join\r\n\r\n(select * \r\n   from tkio.tkio_rlt_install_history_info\r\n   where appid=\'$appid\' and \r\n         ds= date_sub(\'$ds\',1)\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid\r\n', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_cumulativesetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(11, 'tkio_mid_install_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_mid_install_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect xcontext[\'deviceid\'] as deviceid,\r\n       if(xcontext[\'join_type\']=\'0\',\'_default_\', xcontext[\'channelid\'])  as channelid,\r\n       nvl(xcontext[\'channelname\'],\'0\') as channelname,\r\n       nvl(xcontext[\'cid\'],\'0\') as cid,\r\n       xcontext[\'is_norm_install\'] as is_norm_install,\r\n       xcontext[\'ins_datetime\'] as ins_datetime,\r\n       xcontext[\'ins_ip\'] as ins_ip,\r\n       nvl(xcontext[\'clk_datetime\'],\'0\') as clk_datetime,\r\n       nvl(xcontext[\'clk_ip\'],\'0\') as clk_ip,\r\n       xcontext[\'join_type\'] as join_type,\r\n       nvl(xcontext[\'subchannel\'],\'-1\') as subchannel\r\n    from trackdefault.events2\r\n    where ds=\'$ds\' and appid=\'$appid\' and \r\n          xwhat=\'attribute\' and xcontext[\'deviceid\'] is not null and \r\n          xcontext[\'deviceid\'] !=\'00000000-0000-0000-0000-000000000000\';\r\n\r\ninsert overwrite table tkio_realtime.tkio_rlt_install_history_info partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       nvl(a.deviceid,b.deviceid) as deviceid,\r\n       nvl(a.channelid,b.channelid) as channelid,\r\n       nvl(a.channelname,b.channelname) as channelname,\r\n       nvl(a.cid,b.cid) as cid,\r\n       if(isnull(a.deviceid),\'$ds\',b.ins_date) as ins_date,\r\n       nvl(a.ins_datetime,b.ins_datetime) as ins_datetime,\r\n       nvl(a.ins_ip,b.ins_ip) as ins_ip,\r\n       nvl(a.clk_datetime,b.clk_datetime) as clk_datetime,\r\n       nvl(a.clk_ip,b.clk_ip) as clk_ip,\r\n       nvl(a.join_type,b.join_type) as join_type,\r\n       nvl(a.subchannel,b.subchannel) as subchannel\r\n    from\r\n(select * \r\n   from tkio_realtime.tkio_mid_install_day\r\n   where appid=\'$appid\' and \r\n         ds=\'$ds\' and is_norm_install=1\r\n) a\r\n\r\nfull join\r\n\r\n(select * \r\n   from tkio_realtime.tkio_rlt_install_history_info\r\n   where appid=\'$appid\' and \r\n         ds= date_sub(\'$ds\',1)\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_cumulativesetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(13, 'tkio_med_dau_detail_week', 'segments', 'insert overwrite table tkio.tkio_med_dau_detail_week partition(ds=\'$week_start\',appid=\'$appid\')\r\n\r\nselect xwho,\r\n       next_day(date_sub(first_ds,7), \'MO\') as first_week_ds,\r\n       weekofyear(first_ds) as first_week_num,\r\n       collect_set(first_dau_segments) as first_week_segments,\r\n     datediff(\'$week_start\',next_day(date_sub(first_ds,7), \'MO\'))/7 as dau_diff_week,\r\n       collect_list(dau_segments) as week_dau_segments,\r\n       weekofyear(ds) as week_num\r\n    from tkio.tkio_med_dau_detail_day\r\n    where ds between  \'$week_start\'  and \'$week_end\' and \r\n          appid=\'$appid\'\r\n    group by xwho,next_day(date_sub(first_ds,7), \'MO\'),weekofyear(first_ds),next_day(date_sub(ds,7), \'MO\'),weekofyear(ds)', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_cumulativesetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(15, 'tkio_med_dau_detail_month', 'segments', 'insert overwrite table tkio.tkio_med_dau_detail_month partition(ds=\'$month_start\',appid=\'$appid\')\r\n\r\nselect xwho,\r\n       date_format(first_ds,\'yyyy-MM-01\') as first_month_ds,\r\n       month(first_ds) as first_week_num,\r\n       collect_set(first_dau_segments) as first_month_segments,\r\n       months_between(\'$month_start\',date_format(first_ds,\'yyyy-MM-01\')) as dau_diff_month,\r\n       collect_list(dau_segments) as month_dau_segments,\r\n       month(ds) as month_num\r\n    from tkio.tkio_med_dau_detail_day\r\n    where ds between  \'$month_start\'  and \'$month_end\' and \r\n          appid=\'$appid\'\r\n    group by xwho,date_format(first_ds,\'yyyy-MM-01\'),month(first_ds),month(ds)\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
/*!40000 ALTER TABLE `engine_cumulativesetl` ENABLE KEYS */;


-- 导出  表 tkiochange.engine_customconception 结构
CREATE TABLE IF NOT EXISTS `engine_customconception` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) NOT NULL,
  `description` longtext NOT NULL,
  `template` longtext NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_customconception 的数据：7 rows
DELETE FROM `engine_customconception`;
/*!40000 ALTER TABLE `engine_customconception` DISABLE KEYS */;
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(1, 'tkio_mid_dau_day', 'tkio', 'insert overwrite table tkio.tkio_mid_dau_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect   \r\n         a.xwhat,\r\n         a.deviceid,\r\n         nvl(b.channelid,\'_default_\') as channelid,\r\n         nvl(b.channelname,\'_default_\') as channelname,\r\n         nvl(b.cid,-1) as cid,\r\n         a.dau_datetime,\r\n         hour(a.dau_datetime) as dau_hour,\r\n         nvl(b.ins_datetime,0) as ins_datetime,\r\n         if(isnull(b.ins_datetime),999,datediff(to_date(a.dau_datetime),to_date(b.ins_datetime))) as diff_dau_ins,\r\n         nvl(b.clk_datetime,0) as clk_datetime\r\n    from\r\n        (select appid,\r\n                xwhat,\r\n                xcontext[\'deviceid\']  as deviceid,\r\n                min(xwhen) as dau_datetime\r\n        from trackdefault.events2\r\n        where appid =\'$appid\' and \r\n              ds=\'$ds\' and \r\n              xwhat not in (\'install\',\'attribute\') and \r\n              xcontext[\'deviceid\'] is not null and \r\n              xcontext[\'deviceid\'] !=\'00000000-0000-0000-0000-000000000000\'\r\n        group by appid,xwhat,xcontext[\'deviceid\']\r\n        ) a \r\n    left join   \r\n       (select appid,\r\n              channelid,\r\n              deviceid,\r\n              channelname,\r\n              cid,\r\n              ins_datetime,\r\n              clk_datetime\r\n          from tkio.tkio_rlt_install_history_info\r\n          where appid=\'$appid\' and \r\n                ds =\'$ds\'\r\n       ) b on a.appid=b.appid and a.deviceid=b.deviceid', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(2, 'tkio_mid_reg_day', 'tkio', 'insert overwrite table tkio.tkio_mid_reg_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       a.deviceid,\r\n       a.reg_datetime,\r\n       a.reg_ip,\r\n       a.num_reg_account,\r\n       if(isnull(c.deviceid),1,0) as is_normal_reg,\r\n       nvl(b.channelid,\'_default_\') as channelid,\r\n       nvl(b.channelname,0) as channelname,\r\n       nvl(b.cid,\'-1\') as cid,\r\n       nvl(b.ins_datetime,0) as ins_datetime,\r\n       nvl(b.clk_datetime,0) as clk_datetime,\r\n       nvl(b.subchannel,\'-1\') as subchannel,\r\n       a.account_list\r\n    from \r\n(select appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       min(xwhen) reg_datetime,\r\n       nvl(min(xcontext[\'ip\']),\'0\') as reg_ip,\r\n       count(distinct xwho) as num_reg_account,\r\n       collect_set(xwho) as account_list\r\n    from trackdefault.events2\r\n    where xwhat=\'reged\' and \r\n          appid =\'$appid\' and \r\n          ds =\'$ds\' and xcontext[\'deviceid\'] is not null\r\n          and xcontext[\'deviceid\']!=\'00000000-0000-0000-0000-000000000000\'\r\n    group by appid,xcontext[\'deviceid\']\r\n) a \r\n\r\nleft join\r\n\r\n(select appid,\r\n       deviceid,\r\n       channelid,\r\n       channelname,\r\n       cid,\r\n       ins_datetime,\r\n       clk_datetime,\r\n       subchannel\r\n    from tkio.tkio_rlt_install_history_info\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid\r\n\r\n\r\nleft join\r\n\r\n(select appid,\r\n        deviceid\r\n    from tkio.tkio_mid_reg_day\r\n    where appid=\'$appid\' and \r\n          ds between date_sub(\'$ds\',31) and date_sub(\'$ds\',1)\r\ngroup by appid,deviceid\r\n) c on a.appid=c.appid and a.deviceid=c.deviceid\r\n\r\n', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(3, 'tkio_mid_pay_day', 'tkio', 'insert overwrite table tkio.tkio_mid_pay_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       a.deviceid,\r\n       a.pay_datetime,\r\n       if(isnull(b.channelid),999,datediff(to_date(a.pay_datetime),to_date(b.ins_datetime))) as diff_pay_ins,\r\n       a.paymenttype,\r\n       a.order_id,\r\n       a.amount,\r\n       a.pay_ip,\r\n       a.user_id,\r\n       nvl(b.channelid,\'_default_\') as channelid,\r\n       nvl(b.channelname,0) as channelname,\r\n       nvl(b.cid,\'-1\') as cid,\r\n       nvl(b.ins_datetime,0) as ins_datetime,\r\n       nvl(b.clk_datetime,0) as clk_datetime\r\nfrom \r\n(select appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       xwhen as pay_datetime,\r\n       nvl(xcontext[\'paymenttype\'],-1) as paymenttype,\r\n       nvl(xcontext[\'transactionid\'],-1) as order_id,\r\n       nvl(xcontext[\'currencyamount\'],0) as amount,\r\n       nvl(xcontext[\'ip\'],0) as pay_ip,\r\n       xwho as user_id\r\n  from(\r\n     select appid, \r\n            xwho, \r\n            xwhere, \r\n            xcontext,\r\n            min(xwhen) as xwhen\r\n         from trackdefault.events2\r\n         where appid =\'$appid\' and \r\n           ds=\'$ds\' and \r\n           xwhat=\'payment\' and \r\n           xcontext[\'deviceid\'] is not null\r\n         group by appid, xwho, xwhere, xcontext \r\n     ) t1 \r\n\r\n) a\r\n\r\nleft join\r\n\r\n(select appid,\r\n        deviceid,\r\n        channelid,\r\n        channelname,\r\n        cid,\r\n        ins_datetime,\r\n        clk_datetime\r\n    from tkio.tkio_rlt_install_history_info\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(11, 'tkio_mid_dau_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_mid_dau_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect   \r\n         a.xwhat,\r\n         a.deviceid,\r\n         nvl(b.channelid,\'_default_\') as channelid,\r\n         nvl(b.channelname,\'_default_\') as channelname,\r\n         nvl(b.cid,-1) as cid,\r\n         a.dau_datetime,\r\n         hour(a.dau_datetime) as dau_hour,\r\n         nvl(b.ins_datetime,0) as ins_datetime,\r\n         if(isnull(b.ins_datetime),999,datediff(to_date(a.dau_datetime),to_date(b.ins_datetime))) as diff_dau_ins,\r\n         nvl(b.clk_datetime,0) as clk_datetime\r\n    from\r\n        (select appid,\r\n                xwhat,\r\n                xcontext[\'deviceid\']  as deviceid,\r\n                min(xwhen) as dau_datetime\r\n        from trackdefault.events2\r\n        where appid =\'$appid\' and \r\n              ds=\'$ds\' and \r\n              xwhat not in (\'install\',\'attribute\') and \r\n              xcontext[\'deviceid\'] is not null and \r\n              xcontext[\'deviceid\'] !=\'00000000-0000-0000-0000-000000000000\'\r\n        group by appid,xwhat,xcontext[\'deviceid\']\r\n        ) a \r\n    left join   \r\n       (select appid,\r\n              channelid,\r\n              deviceid,\r\n              channelname,\r\n              cid,\r\n              ins_datetime,\r\n              clk_datetime\r\n          from tkio_realtime.tkio_rlt_install_history_info\r\n          where appid=\'$appid\' and \r\n                ds =\'$ds\'\r\n       ) b on a.appid=b.appid and a.deviceid=b.deviceid', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(12, 'tkio_mid_reg_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_mid_reg_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       a.deviceid,\r\n       a.reg_datetime,\r\n       a.reg_ip,\r\n       a.num_reg_account,\r\n       if(isnull(c.deviceid),1,0) as is_normal_reg,\r\n       nvl(b.channelid,\'_default_\') as channelid,\r\n       nvl(b.channelname,0) as channelname,\r\n       nvl(b.cid,\'-1\') as cid,\r\n       nvl(b.ins_datetime,0) as ins_datetime,\r\n       nvl(b.clk_datetime,0) as clk_datetime,\r\n       nvl(b.subchannel,\'-1\') as subchannel,\r\n       a.account_list\r\n    from \r\n(select appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       min(xwhen) reg_datetime,\r\n       nvl(min(xcontext[\'ip\']),\'0\') as reg_ip,\r\n       count(distinct xwho) as num_reg_account,\r\n       collect_set(xwho) as account_list\r\n    from trackdefault.events2\r\n    where xwhat=\'reged\' and \r\n          appid =\'$appid\' and \r\n          ds =\'$ds\' and xcontext[\'deviceid\'] is not null\r\n          and xcontext[\'deviceid\']!=\'00000000-0000-0000-0000-000000000000\'\r\n    group by appid,xcontext[\'deviceid\']\r\n) a \r\n\r\nleft join\r\n\r\n(select appid,\r\n       deviceid,\r\n       channelid,\r\n       channelname,\r\n       cid,\r\n       ins_datetime,\r\n       clk_datetime,\r\n       subchannel\r\n    from tkio_realtime.tkio_rlt_install_history_info\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid\r\n\r\n\r\nleft join\r\n\r\n(select appid,\r\n        deviceid\r\n    from tkio_realtime.tkio_mid_reg_day\r\n    where appid=\'$appid\' and \r\n          ds between date_sub(\'$ds\',31) and date_sub(\'$ds\',1)\r\ngroup by appid,deviceid\r\n) c on a.appid=c.appid and a.deviceid=c.deviceid\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(13, 'tkio_mid_pay_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_mid_pay_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       a.deviceid,\r\n       a.pay_datetime,\r\n       if(isnull(b.channelid),999,datediff(to_date(a.pay_datetime),to_date(b.ins_datetime))) as diff_pay_ins,\r\n       a.paymenttype,\r\n       a.order_id,\r\n       a.amount,\r\n       a.pay_ip,\r\n       a.user_id,\r\n       nvl(b.channelid,\'_default_\') as channelid,\r\n       nvl(b.channelname,0) as channelname,\r\n       nvl(b.cid,\'-1\') as cid,\r\n       nvl(b.ins_datetime,0) as ins_datetime,\r\n       nvl(b.clk_datetime,0) as clk_datetime\r\nfrom \r\n(select appid,\r\n       xcontext[\'deviceid\'] as deviceid,\r\n       xwhen as pay_datetime,\r\n       nvl(xcontext[\'paymenttype\'],-1) as paymenttype,\r\n       nvl(xcontext[\'transactionid\'],-1) as order_id,\r\n       nvl(xcontext[\'currencyamount\'],0) as amount,\r\n       nvl(xcontext[\'ip\'],0) as pay_ip,\r\n       xwho as user_id\r\n  from(\r\n     select appid, \r\n            xwho, \r\n            xwhere, \r\n            xcontext,\r\n            min(xwhen) as xwhen\r\n         from trackdefault.events2\r\n         where appid =\'$appid\' and \r\n           ds=\'$ds\' and \r\n           xwhat=\'payment\' and \r\n           xcontext[\'deviceid\'] is not null\r\n         group by appid, xwho, xwhere, xcontext \r\n     ) t1 \r\n\r\n) a\r\n\r\nleft join\r\n\r\n(select appid,\r\n        deviceid,\r\n        channelid,\r\n        channelname,\r\n        cid,\r\n        ins_datetime,\r\n        clk_datetime\r\n    from tkio_realtime.tkio_rlt_install_history_info\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'\r\n) b on a.appid=b.appid and a.deviceid=b.deviceid', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(14, 'tkio_med_dau_cross_day', 'segments', 'insert overwrite table tkio.tkio_med_dau_cross_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect xwho,\r\n       dau_ds as  dau_ds_base,\r\n       datediff(ds,dau_ds) as dau_diff\r\nfrom \r\n(select xwho,\r\n       ds,\r\n       collect_list(ds) over(partition by xwho order by ds ROWS between 30 PRECEDING  and CURRENT ROW ) as dau_ds_array\r\n  from tkio.tkio_med_dau_detail_day\r\n  where ds between date_sub(\'$ds\',30) and \'$ds\' and \r\n        appid=\'$appid\'\r\n) as t1 lateral view explode(t1.dau_ds_array) lat_view as dau_ds\r\nwhere datediff(ds,dau_ds) in (0,1,2,3,4,5,6,7,14,30) and ds =\'$ds\'', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(15, 'tkio_med_dau_cross_week', 'segments', ' insert overwrite table tkio.tkio_med_dau_cross_week partition(ds=\'$week_start\',appid=\'$appid\')\r\nselect xwho,\r\n       dau_week_ds as  dau_ds_base,\r\n       datediff(ds,dau_week_ds)/7 as dau_diff_week\r\nfrom \r\n(select xwho,\r\n        ds,\r\n        collect_list(ds) over(partition by xwho order by ds ROWS between 8 PRECEDING  and CURRENT ROW ) as dau_week_array\r\n  from tkio.tkio_med_dau_detail_week\r\n  where ds between date_sub(\'$week_start\',56) and \'$week_start\' and \r\n        appid=\'$appid\'\r\n) as t1 lateral view explode(t1.dau_week_array) lat_view as dau_week_ds\r\nwhere ds =\'$week_start\'', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customconception` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(16, 'tkio_med_dau_cross_month', 'segments', 'insert overwrite table tkio.tkio_med_dau_cross_month partition(ds=\'$month_start\',appid=\'$appid\')\r\nselect xwho,\r\n       dau_week_ds as  dau_ds_base,\r\n       months_between(ds,dau_week_ds) as dau_diff_month\r\nfrom \r\n(select xwho,\r\n        ds,\r\n        collect_list(ds) over(partition by xwho order by ds ROWS between 3 PRECEDING  and CURRENT ROW ) as dau_month_array\r\n  from tkio.tkio_med_dau_detail_month\r\n  where ds between add_months(\'$month_start\',-3) and \'$month_start\' and \r\n        appid=\'$appid\'\r\n) as t1 lateral view explode(t1.dau_month_array) lat_view as dau_week_ds\r\nwhere ds =\'$month_start\'', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
/*!40000 ALTER TABLE `engine_customconception` ENABLE KEYS */;


-- 导出  表 tkiochange.engine_customlogicchain 结构
CREATE TABLE IF NOT EXISTS `engine_customlogicchain` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) NOT NULL,
  `description` longtext NOT NULL,
  `template` longtext NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_customlogicchain 的数据：9 rows
DELETE FROM `engine_customlogicchain`;
/*!40000 ALTER TABLE `engine_customlogicchain` DISABLE KEYS */;
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(1, 'tkio_rlt_clk_day', 'tkio', '\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rlt_clk_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hours\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       sum(num_click) num_click,\r\n       sum(num_click_fake) num_click_fake,\r\n       sum(dupnum_click_day) dupnum_click_day,\r\n       sum(dupnum_click_all) dupnum_click_all\r\n\r\nfrom \r\n(\r\nselect appid,\r\n       channelid,\r\n       cid,\r\n       null as hours,\r\n       null as num_click,\r\n       null as num_click_fake,\r\n       null as dupnum_click_day,\r\n       count(1) as dupnum_click_all\r\nfrom (\r\nselect a.appid,\r\n       a.channelid,\r\n       a.cid,\r\n       a.deviceid,\r\n       count(if(a.diff_clk=0,1,null)) as num_td_clk,\r\n       count(if(a.diff_clk!=0,1,null)) as num_ci_clk\r\nfrom \r\n\r\n(select ds,\r\n       appid,\r\n       deviceid,\r\n       channelid,\r\n       cid,\r\n       from_unixtime( cast(clk_time as int)) as clk_datetime,\r\n       datediff(\'$ds\',ds) as diff_clk\r\n    from tkio.tkio_mid_clk_normal_day\r\n    where appid=\'$appid\' and \r\n          ds between date_sub(\'$ds\',30) and \'$ds\'  \r\n          and is_normal=1\r\n    distribute by appid,channelid,deviceid,cid\r\n) a\r\n\r\nleft join \r\n\r\n(select appid,\r\n        clicksubdays\r\n    from trackparams.params\r\n    where ds=\'$ds\' and \r\n          appid=\'52813c017a609857401d369d83d32af3\'\r\n) b on a.appid=b.appid\r\nwhere a.diff_clk <= nvl(b.clicksubdays,30)\r\ngroup by a.appid,a.channelid,a.deviceid,a.cid\r\nhaving count(if(a.diff_clk=0,1,null))>0 and  count(if(a.diff_clk!=0,1,null))=0\r\n) t1\r\ngroup by appid,channelid,cid\r\n\r\n\r\nunion all\r\n\r\nselect appid,\r\n       channelid,\r\n       cid,\r\n       hour( from_unixtime( cast(clk_time as int)) ) as hours,\r\n       sum(if( is_normal=1,1,0)) as num_click,\r\n       sum(if( is_normal=0,1,0)) as num_click_fake,      \r\n       count(distinct if(is_normal=1,deviceid,null)) as dupnum_click_day,\r\n       0 as dupnum_click_all\r\n    from tkio.tkio_mid_clk_normal_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\'  \r\n    group by appid,channelid,cid,hour( from_unixtime( cast(clk_time as int)))\r\n    grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour( from_unixtime( cast(clk_time as int)))))\r\n\r\n) t1\r\ngroup by appid,channelid,cid,if(isnull(hours),\'day\',\'hours\'),nvl(hours,\'-1\')', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(13, 'tkio_rlt_reg_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_rlt_reg_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       num_reg,\r\n       dupnum_reg\r\nfrom\r\n\r\n(select appid,\r\n       channelid,\r\n       cid,\r\n       hour(reg_datetime)  as hours,\r\n       count(1) as num_reg,\r\n       count(if(is_normal_reg=1,1,null)) as dupnum_reg\r\n   from tkio_realtime.tkio_mid_reg_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(reg_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(reg_datetime)))\r\n) t1', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(14, 'tkio_rlt_pay_day', 'tkio_realtime', '\r\ninsert overwrite table tkio_realtime.tkio_rlt_pay_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect nvl(dt,\'$ds\') as dt,\r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       sum(if(isnull(dt),amt_income_new_user,0)) as amt_income_new_user,\r\n       sum(if(isnull(dt),num_payer_new_user,0)) as num_payer_new_user,\r\n       sum(if(isnull(dt),amt_income_all_user,0)) as  amt_income_all_user,\r\n       sum(if(isnull(dt),num_payer_all_user,0)) as num_payer_all_user,\r\n       sum(if(isnull(dt),0, ltv0)) as ltv0,\r\n       sum(if(isnull(dt),0, ltv7)) as ltv7,\r\n       sum(if(isnull(dt),0, ltv30)) as ltv30,\r\n       sum(if(isnull(dt),0, ltv60)) as ltv60\r\nfrom \r\n(select to_date(ins_datetime) as dt,\r\n       appid,\r\n       channelid,\r\n       cid,\r\n       hour(pay_datetime) as hours,\r\n       sum(if(diff_pay_ins=0,amount,0)) as amt_income_new_user,\r\n       count(distinct if(diff_pay_ins=0,deviceid,0)) as num_payer_new_user,\r\n       sum(amount) as amt_income_all_user,\r\n       count(distinct deviceid) as num_payer_all_user,\r\n       sum(if(diff_pay_ins=0,amount,0)) as ltv0,\r\n       sum(if(diff_pay_ins<=7,amount,0)) as ltv7,\r\n       sum(if(diff_pay_ins<=30,amount,0)) as ltv30,\r\n       sum(if(diff_pay_ins<=60,amount,0)) as ltv60\r\n   from tkio_realtime.tkio_mid_pay_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(pay_datetime) ,to_date(ins_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(pay_datetime)),(appid,channelid,cid,to_date(ins_datetime))) \r\n) as t1\r\ngroup by nvl(dt,\'$ds\'),channelid,cid,if(isnull(hours),\'day\',\'hour\') ,nvl(hours,\'-1\')', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(2, 'tkio_rlt_ins_day', 'tkio', '\r\n\r\n\r\ninsert overwrite table tkio.tkio_rlt_ins_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       num_ins,\r\n       num_ins_fake\r\nfrom\r\n\r\n(select appid,\r\n       channelid,\r\n       cid,\r\n       hour(ins_datetime)  as hours,\r\n       count(if(is_norm_install=1,1,null)) as num_ins,\r\n       count(if(is_norm_install=0,1,null)) as num_ins_fake\r\n   from tkio.tkio_mid_install_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(ins_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(ins_datetime)))\r\n) t1\r\n', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(3, 'tkio_rlt_dau_day', 'tkio', '\r\n\r\n\r\ninsert overwrite table tkio.tkio_rlt_dau_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect nvl(dt,\'$ds\') as dt,\r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,-1) as hours,\r\n       sum(if(isnull(dt),dau,0)) as dau,\r\n       sum(if(isnull(dt),0,d1) ) num_newuser_reten_d1,\r\n       sum(if(isnull(dt),0,d3)) num_newuser_reten_d3,\r\n       sum(if(isnull(dt),0,d7)) num_newuser_reten_d7,\r\n       sum(if(isnull(dt),0,d30)) num_newuser_reten_d30\r\nfrom \r\n(\r\nselect dt,\r\n       appid,\r\n       channelid,\r\n       cid,\r\n       hours,\r\n       count(1) as dau,\r\n       sum(if(diff_dau_ins=1,1,0)) as d1,\r\n       sum(if(diff_dau_ins=3,1,0)) as d3,\r\n       sum(if(diff_dau_ins=7,1,0)) as d7,\r\n       sum(if(diff_dau_ins=30,1,0)) as d30\r\n  from \r\n( select appid,\r\n         channelid,\r\n         cid,\r\n         deviceid,\r\n         min(dau_hour) as hours,\r\n         min(to_date(ins_datetime)) as dt,\r\n         min(diff_dau_ins) as diff_dau_ins\r\n    from tkio.tkio_mid_dau_day\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'  and \r\n          deviceid is not null and \r\n          deviceid !=\'00000000-0000-0000-0000-000000000000\'\r\n    group by appid,channelid,cid,deviceid\r\n) as t0\r\ngroup by dt,appid,channelid,cid,hours\r\ngrouping sets( (appid,channelid,cid), (appid,channelid,cid,hours),(dt,appid,channelid,cid))\r\n) t1\r\nwhere nvl(dt,\'$ds\') in (\'$ds\',date_sub(\'$ds\',1),date_sub(\'$ds\',3),date_sub(\'$ds\',7),date_sub(\'$ds\',30))\r\ngroup by nvl(dt,\'$ds\') ,channelid,cid,nvl(hours,-1),if(isnull(hours),\'day\',\'hour\')\r\n', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(11, 'tkio_rlt_ins_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_rlt_ins_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect \r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       num_ins,\r\n       num_ins_fake\r\nfrom\r\n\r\n(select appid,\r\n       channelid,\r\n       cid,\r\n       hour(ins_datetime)  as hours,\r\n       count(if(is_norm_install=1,1,null)) as num_ins,\r\n       count(if(is_norm_install=0,1,null)) as num_ins_fake\r\n   from tkio_realtime.tkio_mid_install_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(ins_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(ins_datetime)))\r\n) t1', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(12, 'tkio_rlt_dau_day', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_rlt_dau_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect nvl(dt,\'$ds\') as dt,\r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,-1) as hours,\r\n       sum(if(isnull(dt),dau,0)) as dau,\r\n       sum(if(isnull(dt),0,d1) ) num_newuser_reten_d1,\r\n       sum(if(isnull(dt),0,d3)) num_newuser_reten_d3,\r\n       sum(if(isnull(dt),0,d7)) num_newuser_reten_d7,\r\n       sum(if(isnull(dt),0,d30)) num_newuser_reten_d30\r\nfrom \r\n(\r\nselect dt,\r\n       appid,\r\n       channelid,\r\n       cid,\r\n       hours,\r\n       count(1) as dau,\r\n       sum(if(diff_dau_ins=1,1,0)) as d1,\r\n       sum(if(diff_dau_ins=3,1,0)) as d3,\r\n       sum(if(diff_dau_ins=7,1,0)) as d7,\r\n       sum(if(diff_dau_ins=30,1,0)) as d30\r\n  from \r\n( select appid,\r\n         channelid,\r\n         cid,\r\n         deviceid,\r\n         min(dau_hour) as hours,\r\n         min(to_date(ins_datetime)) as dt,\r\n         min(diff_dau_ins) as diff_dau_ins\r\n    from tkio_realtime.tkio_mid_dau_day\r\n    where appid=\'$appid\' and \r\n          ds=\'$ds\'  and \r\n          deviceid is not null and \r\n          deviceid !=\'00000000-0000-0000-0000-000000000000\'\r\n    group by appid,channelid,cid,deviceid\r\n) as t0\r\ngroup by dt,appid,channelid,cid,hours\r\ngrouping sets( (appid,channelid,cid), (appid,channelid,cid,hours),(dt,appid,channelid,cid))\r\n) t1\r\nwhere nvl(dt,\'$ds\') in (\'$ds\',date_sub(\'$ds\',1),date_sub(\'$ds\',3),date_sub(\'$ds\',7),date_sub(\'$ds\',30))\r\ngroup by nvl(dt,\'$ds\') ,channelid,cid,nvl(hours,-1),if(isnull(hours),\'day\',\'hour\')\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(4, 'tkio_rlt_reg_day', 'tkio', 'insert overwrite table tkio.tkio_rlt_reg_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       num_reg,\r\n       dupnum_reg\r\nfrom\r\n\r\n(select appid,\r\n       channelid,\r\n       cid,\r\n       hour(reg_datetime)  as hours,\r\n       count(1) as num_reg,\r\n       count(if(is_normal_reg=1,1,null)) as dupnum_reg\r\n   from tkio.tkio_mid_reg_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(reg_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(reg_datetime)))\r\n) t1', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_customlogicchain` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(5, 'tkio_rlt_pay_day', 'tkio', 'insert overwrite table tkio.tkio_rlt_pay_day partition(ds=\'$ds\',appid=\'$appid\')\r\n\r\nselect nvl(dt,\'$ds\') as dt,\r\n       channelid,\r\n       cid,\r\n       if(isnull(hours),\'day\',\'hour\') as ty,\r\n       nvl(hours,\'-1\') as hours,\r\n       sum(if(isnull(dt),amt_income_new_user,0)) as amt_income_new_user,\r\n       sum(if(isnull(dt),num_payer_new_user,0)) as num_payer_new_user,\r\n       sum(if(isnull(dt),amt_income_all_user,0)) as  amt_income_all_user,\r\n       sum(if(isnull(dt),num_payer_all_user,0)) as num_payer_all_user,\r\n       sum(if(isnull(dt),0, ltv0)) as ltv0,\r\n       sum(if(isnull(dt),0, ltv7)) as ltv7,\r\n       sum(if(isnull(dt),0, ltv30)) as ltv30,\r\n       sum(if(isnull(dt),0, ltv60)) as ltv60\r\nfrom \r\n(select to_date(ins_datetime) as dt,\r\n       appid,\r\n       channelid,\r\n       cid,\r\n       hour(pay_datetime) as hours,\r\n       sum(if(diff_pay_ins=0,amount,0)) as amt_income_new_user,\r\n       count(distinct if(diff_pay_ins=0,deviceid,0)) as num_payer_new_user,\r\n       sum(amount) as amt_income_all_user,\r\n       count(distinct deviceid) as num_payer_all_user,\r\n       sum(if(diff_pay_ins=0,amount,0)) as ltv0,\r\n       sum(if(diff_pay_ins<=7,amount,0)) as ltv7,\r\n       sum(if(diff_pay_ins<=30,amount,0)) as ltv30,\r\n       sum(if(diff_pay_ins<=60,amount,0)) as ltv60\r\n   from tkio.tkio_mid_pay_day\r\n   where appid=\'$appid\' and \r\n          ds=\'$ds\' \r\n   group by appid,channelid,cid,hour(pay_datetime) ,to_date(ins_datetime) \r\n   grouping sets( (appid,channelid,cid),(appid,channelid,cid,hour(pay_datetime)),(appid,channelid,cid,to_date(ins_datetime))) \r\n) as t1\r\ngroup by nvl(dt,\'$ds\'),channelid,cid,if(isnull(hours),\'day\',\'hour\') ,nvl(hours,\'-1\')', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
/*!40000 ALTER TABLE `engine_customlogicchain` ENABLE KEYS */;


-- 导出  表 tkiochange.engine_reportetl 结构
CREATE TABLE IF NOT EXISTS `engine_reportetl` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(256) NOT NULL,
  `description` longtext NOT NULL,
  `template` longtext NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_reportetl 的数据：8 rows
DELETE FROM `engine_reportetl`;
/*!40000 ALTER TABLE `engine_reportetl` DISABLE KEYS */;
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(1, 'days', 'tkio', 'from (\r\nselect appid,\r\nto_date(dt) as dt,\r\nchannelid,\r\ncid,\r\nsum(if(union_ty=\'clk\',v1,0)) as num_click,\r\nsum(if(union_ty=\'clk\',v2,0)) as num_click_fake,\r\nsum(if(union_ty=\'clk\',v3,0)) as dupnum_click_day,\r\nsum(if(union_ty=\'clk\',v4,0)) as dupnum_click_all,\r\nsum(if(union_ty=\'dau\',v1,0)) as dau,\r\nsum(if(union_ty=\'dau\',v2,0)) as d1,\r\nsum(if(union_ty=\'dau\',v3,0)) as d3,\r\nsum(if(union_ty=\'dau\',v4,0)) as d7,\r\nsum(if(union_ty=\'dau\',v5,0)) as d30,\r\nsum(if(union_ty=\'ins\',v1,0)) as num_ins,\r\nsum(if(union_ty=\'ins\',v2,0)) as num_ins_fake,\r\nsum(if(union_ty=\'reg\',v1,0)) as num_reg,\r\nsum(if(union_ty=\'reg\',v2,0)) as dupnum_reg,\r\nround(sum(if(union_ty=\'pay\',v1,0)),2) as amt_income_new_user,\r\nsum(if(union_ty=\'pay\',v2,0)) as num_payer_new_user,\r\nround(sum(if(union_ty=\'pay\',v3,0)),2) as amt_income_all_user,\r\nsum(if(union_ty=\'pay\',v4,0)) as num_payer_all_user,\r\nsum(if(union_ty=\'pay\',v5,0)) as ltv0,\r\nsum(if(union_ty=\'pay\',v6,0)) as ltv7,\r\nsum(if(union_ty=\'pay\',v7,0)) as ltv30,\r\nsum(if(union_ty=\'pay\',v8,0)) as ltv60\r\nfrom (\r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'clk\' as union_ty,\r\nnum_click as v1,\r\nnum_click_fake as v2,\r\ndupnum_click_day as v3,\r\ndupnum_click_all as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio.tkio_rlt_clk_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\ndt,\r\nchannelid,\r\ncid,\r\n\'dau\' as union_ty,  \r\ndau as v1,\r\nnum_newuser_reten_d1 as v2,\r\nnum_newuser_reten_d3 as v3,\r\nnum_newuser_reten_d7 as v4,\r\nnum_newuser_reten_d30 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio.tkio_rlt_dau_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'ins\' as union_ty,  \r\nnum_ins as v1,\r\nnum_ins_fake as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio.tkio_rlt_ins_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all\r\nselect appid,\r\ndt,\r\nchannelid,\r\ncid,\r\n\'pay\' as union_ty,\r\namt_income_new_user as v1,\r\nnum_payer_new_user as v2,\r\namt_income_all_user as v3,\r\nnum_payer_all_user as v4,\r\nltv0 as v5,\r\nltv7 as v6,\r\nltv30 as v7,\r\nltv60 as v8\r\nfrom tkio.tkio_rlt_pay_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'reg\' as union_ty,\r\nnum_reg as v1,\r\ndupnum_reg as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio.tkio_rlt_reg_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\n) as union_all_table\r\ngroup by  appid,dt,channelid,cid\r\n) as final\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_channel_compare_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\ndupnum_click_all,\r\ndupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nd1,\r\nd3,\r\nd7,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user\r\nwhere dt in (\'$ds\',date_sub(\'$ds\',1) ,date_sub(\'$ds\',3),date_sub(\'$ds\',7) )\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_dashboard_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nsum(num_click) as num_click,\r\nsum(dupnum_click_day) as dupnum_click,\r\nsum(if(channelid!=\'_default_\',amt_income_all_user,0)) as amt_income_cam,\r\nsum(if(channelid=\'_default_\',amt_income_all_user,0)) as amt_income_def,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_install_cam,\r\n-1 as rate_install_std,\r\nsum(dau) as dau,\r\nsum(if(channelid=\'_default_\',num_reg,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_reg,0)) as num_install_cam,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_newuser_def,\r\nsum(if(channelid=\'_default_\',d1,0)) as num_newuser_reten_next_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_newuser_cam,\r\nsum(if(channelid!=\'_default_\',d1,0)) as num_newuser_reten_next_cam,\r\n-1 as rate_reten_oneday_std\r\nwhere dt between date_sub(\'$ds\',1) and \'$ds\'\r\ngroup by appid,dt\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_top_dashboard_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\nnum_ins as num_install,\r\namt_income_all_user as amt_income\r\nwhere final.dt=\'$ds\'\r\n\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_source_analysis_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\ndupnum_click_all,\r\ndupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nd1 as num_newuser_reten_d1,\r\nd3 as num_newuser_reten_d3,\r\nd7 as num_newuser_reten_d7,\r\nd30 as num_newuser_reten_d30,\r\nltv0,\r\nltv7,\r\nltv30,\r\nltv60,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user,\r\nnum_click_fake,\r\nnum_ins_fake as num_install_fake\r\nwhere dt between date_sub(\'$ds\',60) and \'$ds\';', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(2, 'hours', 'tkio', 'from (\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\nsum(if(union_ty=\'clk\',v1,0)) as num_click,\r\nsum(if(union_ty=\'clk\',v3,0)) as dupnum_click_day,\r\nsum(if(union_ty=\'dau\',v1,0)) as dau,\r\nsum(if(union_ty=\'ins\',v1,0)) as num_ins,\r\nround(sum(if(union_ty=\'pay\',v1,0)),2) as amt_income_new_user,\r\nsum(if(union_ty=\'pay\',v2,0)) as num_payer_new_user,\r\nround(sum(if(union_ty=\'pay\',v3,0)),2) as amt_income_all_user,\r\nsum(if(union_ty=\'pay\',v4,0)) as num_payer_all_user,\r\nsum(if(union_ty=\'reg\',v1,0)) as num_reg,\r\nsum(if(union_ty=\'reg\',v2,0)) as dupnum_reg\r\nfrom (\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'clk\' as union_ty,\r\nnum_click as v1,\r\nnum_click_fake as v2,\r\ndupnum_click_day as v3,\r\ndupnum_click_all as v4,\r\n0 as v5\r\nfrom tkio.tkio_rlt_clk_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hours\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'dau\' as union_ty,\r\ndau as v1,\r\nnum_newuser_reten_d1 as v2,\r\nnum_newuser_reten_d3 as v3,\r\nnum_newuser_reten_d7 as v4,\r\nnum_newuser_reten_d30 as v5\r\nfrom tkio.tkio_rlt_dau_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'ins\' as union_ty,\r\nnum_ins as v1,\r\nnum_ins_fake as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5\r\nfrom tkio.tkio_rlt_ins_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'pay\' as union_ty,\r\namt_income_new_user as v1,\r\nnum_payer_new_user as v2,\r\namt_income_all_user as v3,\r\nnum_payer_all_user as v4,\r\n0 as v5\r\nfrom tkio.tkio_rlt_pay_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'reg\' as union_ty,\r\nnum_reg as v1,\r\ndupnum_reg as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5\r\nfrom tkio.tkio_rlt_reg_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\n) as union_all_table\r\ngroup by appid,channelid,cid,hours\r\n) as final\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_channel_compare_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nchannelid,\r\ncid,\r\nnum_click,\r\ndupnum_click_day,\r\nnull as dupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nnull as num_newuser_reten_d1,\r\nnull as num_newuser_reten_d3,\r\nnull as num_newuser_reten_d7,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_dashboard_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nsum(num_click) as num_click,\r\nsum(dupnum_click_day) as dupnum_click,\r\nsum(if(channelid!=\'_default_\',amt_income_new_user,0)) as amt_income_cam,\r\nsum(if(channelid=\'_default_\',amt_income_new_user,0)) as amt_income_def,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_install_cam,\r\nnull as rate_install_std,\r\nsum(dau) as dau,\r\nsum(if(channelid=\'_default_\',num_reg,0)) as num_reged_def,\r\nsum(if(channelid!=\'_default_\',num_reg,0)) as num_reged_cam,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_newuser_def,\r\nnull as num_newuser_reten_next_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_newuser_cam,\r\nnull as num_newuser_reten_next_cam,\r\nnull as rate_reten_oneday_std\r\ngroup by appid,hours\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_realtime_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nchannelid,\r\ncid,\r\nnum_click,\r\nnum_ins,\r\ndupnum_click_day,\r\ndau,\r\namt_income_all_user,\r\nnum_payer_all_user;', '2017-01-03 00:00:00', '2017-01-03 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(11, 'lag', 'tkio', 'from (\r\n   select appid,\r\n          channelid,\r\n          cid,\r\n          \'clk\' as ty,\r\n          \'$ds\' as clk_date,\r\n          -1 as diff_for_ins,\r\n          num_click as v1,\r\n          dupnum_click_day as v2,\r\n          dupnum_click_all as v3,\r\n          0 as v4\r\n   from tkio.tkio_rlt_clk_day\r\n   where ds=\'$ds\' and \r\n         appid=\'$appid\'\r\n         and ty=\'day\' and cid!=\'-1\'\r\n\r\nunion all\r\n\r\n    select appid,\r\n           channelid,\r\n           cid,\r\n           \'ins\' as ty,\r\n           to_date(clk_datetime) as clk_date,\r\n           datediff(to_date(ins_datetime),to_date(clk_datetime)) as diff_for_ins,\r\n           0 as v1,\r\n           0 as v2,\r\n           0 as v3,\r\n           count(1) as v4\r\n        from tkio.tkio_mid_install_day\r\n        where ds=\'$ds\' and \r\n              appid=\'$appid\' and \r\n              cid!=\'-1\'\r\n        group by appid,channelid,to_date(ins_datetime),to_date(clk_datetime),cid\r\n) as union_tb\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_lag_ins_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\n        channelid as campaignid,\r\n        cid,\r\n        sum(v4) as num_install,\r\n        sum(if(diff_for_ins=0,v4,0)) as num_clk_d0,\r\n        sum(if(diff_for_ins=1,v4,0)) as num_clk_d1,\r\n        sum(if(diff_for_ins=2,v4,0)) as num_clk_d2,\r\n        sum(if(diff_for_ins=3,v4,0)) as num_clk_d3,\r\n        sum(if(diff_for_ins=4,v4,0)) as num_clk_d4,\r\n        sum(if(diff_for_ins=5,v4,0)) as num_clk_d5,\r\n        sum(if(diff_for_ins=6,v4,0)) as num_clk_d6,\r\n        sum(if(diff_for_ins=7,v4,0)) as num_clk_d7,\r\n        sum(if(diff_for_ins between 8 and 14,v4,0)) as num_clk_d8_14,\r\n        sum(if(diff_for_ins>14,v4,0)) as num_clk_d15\r\n    group by channelid,cid\r\n\r\n\r\n\r\ninsert overwrite table tkio.tkio_rpt_lag_clk_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect  clk_date as dt,\r\n        channelid as campaignid,\r\n        cid,\r\n        sum(v1) as num_click,\r\n        sum(v2) as dupnum_click_day,\r\n        sum(v3) as dupnum_click_all,\r\n        sum(if(diff_for_ins=0,v4,0)) as num_ins_d0,\r\n        sum(if(diff_for_ins=1,v4,0)) as num_ins_d1,\r\n        sum(if(diff_for_ins=2,v4,0)) as num_ins_d2,\r\n        sum(if(diff_for_ins=3,v4,0)) as num_ins_d3,\r\n        sum(if(diff_for_ins=4,v4,0)) as num_ins_d4,\r\n        sum(if(diff_for_ins=5,v4,0)) as num_ins_d5,\r\n        sum(if(diff_for_ins=6,v4,0)) as num_ins_d6,\r\n        sum(if(diff_for_ins=7,v4,0)) as num_ins_d7,\r\n        sum(if(diff_for_ins between 8 and 14,v4,0)) as num_ins_d8_14,\r\n        sum(if(diff_for_ins>14,v4,0)) as num_ins_d15\r\ngroup by clk_date,channelid,cid\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(12, 'subchannle', 'tkio', 'insert overwrite table tkio.tkio_rpt_subchannel_summ_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\n        channelid,\r\n        subchannel,\r\n        sum(num_click) as num_click,\r\n        sum(dupnum_click_day) as dupnum_click_day,\r\n        sum(num_ins) as num_ins,\r\n        sum(dupnum_reg) as dupnum_reg\r\nfrom \r\n(select appid,\r\n       channelid,\r\n       subchannel,\r\n       sum(if( is_normal=1,1,0)) as num_click,  \r\n       count(distinct if(is_normal=1,deviceid,null)) as dupnum_click_day,\r\n       0 as num_ins,\r\n       0 as dupnum_reg\r\n    from tkio.tkio_mid_clk_normal_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\' and \r\n          channelid!=\'_default_\'  and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,cid,subchannel\r\n\r\n\r\nunion all\r\n\r\nselect appid,\r\n       channelid,\r\n       subchannel,\r\n       0 as num_click,\r\n       0 as dupnum_click_day,\r\n       0 as num_ins,\r\n       count(1) as dupnum_reg\r\n    from tkio.tkio_mid_reg_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\'  and \r\n          channelid!=\'_default_\'  and \r\n          is_normal_reg=1 and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,subchannel\r\n\r\nunion all\r\n\r\nselect appid,\r\n       channelid,\r\n       subchannel,\r\n       0 as num_click,\r\n       0 as dupnum_click_day,\r\n       count(1) as num_ins,\r\n       0 as dupnum_reg\r\n    from tkio.tkio_mid_install_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\'  and \r\n          channelid!=\'_default_\'  and \r\n          is_norm_install=1 and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,subchannel\r\n) as final\r\ngroup by channelid,subchannel\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(13, 'days1', 'tkio_realtime', 'from (\r\nselect appid,\r\nto_date(dt) as dt,\r\nchannelid,\r\ncid,\r\nsum(if(union_ty=\'clk\',v1,0)) as num_click,\r\nsum(if(union_ty=\'clk\',v2,0)) as num_click_fake,\r\nsum(if(union_ty=\'clk\',v3,0)) as dupnum_click_day,\r\nsum(if(union_ty=\'clk\',v4,0)) as dupnum_click_all,\r\nsum(if(union_ty=\'dau\',v1,0)) as dau,\r\nsum(if(union_ty=\'dau\',v2,0)) as d1,\r\nsum(if(union_ty=\'dau\',v3,0)) as d3,\r\nsum(if(union_ty=\'dau\',v4,0)) as d7,\r\nsum(if(union_ty=\'dau\',v5,0)) as d30,\r\nsum(if(union_ty=\'ins\',v1,0)) as num_ins,\r\nsum(if(union_ty=\'ins\',v2,0)) as num_ins_fake,\r\nsum(if(union_ty=\'reg\',v1,0)) as num_reg,\r\nsum(if(union_ty=\'reg\',v2,0)) as dupnum_reg,\r\nround(sum(if(union_ty=\'pay\',v1,0)),2) as amt_income_new_user,\r\nsum(if(union_ty=\'pay\',v2,0)) as num_payer_new_user,\r\nround(sum(if(union_ty=\'pay\',v3,0)),2) as amt_income_all_user,\r\nsum(if(union_ty=\'pay\',v4,0)) as num_payer_all_user,\r\nsum(if(union_ty=\'pay\',v5,0)) as ltv0,\r\nsum(if(union_ty=\'pay\',v6,0)) as ltv7,\r\nsum(if(union_ty=\'pay\',v7,0)) as ltv30,\r\nsum(if(union_ty=\'pay\',v8,0)) as ltv60\r\nfrom (\r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'clk\' as union_ty,\r\nnum_click as v1,\r\nnum_click_fake as v2,\r\ndupnum_click_day as v3,\r\ndupnum_click_all as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio.tkio_rlt_clk_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\ndt,\r\nchannelid,\r\ncid,\r\n\'dau\' as union_ty,  \r\ndau as v1,\r\nnum_newuser_reten_d1 as v2,\r\nnum_newuser_reten_d3 as v3,\r\nnum_newuser_reten_d7 as v4,\r\nnum_newuser_reten_d30 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio_realtime.tkio_rlt_dau_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'ins\' as union_ty,  \r\nnum_ins as v1,\r\nnum_ins_fake as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio_realtime.tkio_rlt_ins_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all\r\nselect appid,\r\ndt,\r\nchannelid,\r\ncid,\r\n\'pay\' as union_ty,\r\namt_income_new_user as v1,\r\nnum_payer_new_user as v2,\r\namt_income_all_user as v3,\r\nnum_payer_all_user as v4,\r\nltv0 as v5,\r\nltv7 as v6,\r\nltv30 as v7,\r\nltv60 as v8\r\nfrom tkio_realtime.tkio_rlt_pay_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\nunion all \r\nselect appid,\r\n\'$ds\' as dt,\r\nchannelid,\r\ncid,\r\n\'reg\' as union_ty,\r\nnum_reg as v1,\r\ndupnum_reg as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5,\r\n0 as v6,\r\n0 as v7,\r\n0 as v8\r\nfrom tkio_realtime.tkio_rlt_reg_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'day\'\r\n) as union_all_table\r\ngroup by  appid,dt,channelid,cid\r\n) as final\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_channel_compare_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\ndupnum_click_all,\r\ndupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nd1,\r\nd3,\r\nd7,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user\r\nwhere dt in (\'$ds\',date_sub(\'$ds\',1) ,date_sub(\'$ds\',3),date_sub(\'$ds\',7) )\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_dashboard_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nsum(num_click) as num_click,\r\nsum(dupnum_click_day) as dupnum_click,\r\nsum(if(channelid!=\'_default_\',amt_income_all_user,0)) as amt_income_cam,\r\nsum(if(channelid=\'_default_\',amt_income_all_user,0)) as amt_income_def,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_install_cam,\r\n-1 as rate_install_std,\r\nsum(dau) as dau,\r\nsum(if(channelid=\'_default_\',num_reg,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_reg,0)) as num_install_cam,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_newuser_def,\r\nsum(if(channelid=\'_default_\',d1,0)) as num_newuser_reten_next_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_newuser_cam,\r\nsum(if(channelid!=\'_default_\',d1,0)) as num_newuser_reten_next_cam,\r\n-1 as rate_reten_oneday_std\r\nwhere dt between date_sub(\'$ds\',1) and \'$ds\'\r\ngroup by appid,dt\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_top_dashboard_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\nnum_ins as num_install,\r\namt_income_all_user as amt_income\r\nwhere final.dt=\'$ds\'\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_source_analysis_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect dt,\r\nchannelid as campaigid,\r\ncid,\r\nnum_click,\r\ndupnum_click_all,\r\ndupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nd1 as num_newuser_reten_d1,\r\nd3 as num_newuser_reten_d3,\r\nd7 as num_newuser_reten_d7,\r\nd30 as num_newuser_reten_d30,\r\nltv0,\r\nltv7,\r\nltv30,\r\nltv60,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user,\r\nnum_click_fake,\r\nnum_ins_fake as num_install_fake\r\nwhere dt between date_sub(\'$ds\',60) and \'$ds\';', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(14, 'hours1', 'tkio_realtime', 'from (\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\nsum(if(union_ty=\'clk\',v1,0)) as num_click,\r\nsum(if(union_ty=\'clk\',v3,0)) as dupnum_click_day,\r\nsum(if(union_ty=\'dau\',v1,0)) as dau,\r\nsum(if(union_ty=\'ins\',v1,0)) as num_ins,\r\nround(sum(if(union_ty=\'pay\',v1,0)),2) as amt_income_new_user,\r\nsum(if(union_ty=\'pay\',v2,0)) as num_payer_new_user,\r\nround(sum(if(union_ty=\'pay\',v3,0)),2) as amt_income_all_user,\r\nsum(if(union_ty=\'pay\',v4,0)) as num_payer_all_user,\r\nsum(if(union_ty=\'reg\',v1,0)) as num_reg,\r\nsum(if(union_ty=\'reg\',v2,0)) as dupnum_reg\r\nfrom (\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'clk\' as union_ty,\r\nnum_click as v1,\r\nnum_click_fake as v2,\r\ndupnum_click_day as v3,\r\ndupnum_click_all as v4,\r\n0 as v5\r\nfrom tkio.tkio_rlt_clk_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hours\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'dau\' as union_ty,\r\ndau as v1,\r\nnum_newuser_reten_d1 as v2,\r\nnum_newuser_reten_d3 as v3,\r\nnum_newuser_reten_d7 as v4,\r\nnum_newuser_reten_d30 as v5\r\nfrom tkio_realtime.tkio_rlt_dau_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'ins\' as union_ty,\r\nnum_ins as v1,\r\nnum_ins_fake as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5\r\nfrom tkio_realtime.tkio_rlt_ins_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'pay\' as union_ty,\r\namt_income_new_user as v1,\r\nnum_payer_new_user as v2,\r\namt_income_all_user as v3,\r\nnum_payer_all_user as v4,\r\n0 as v5\r\nfrom tkio_realtime.tkio_rlt_pay_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\nunion all\r\nselect appid,\r\nchannelid,\r\ncid,\r\nhours,\r\n\'reg\' as union_ty,\r\nnum_reg as v1,\r\ndupnum_reg as v2,\r\n0 as v3,\r\n0 as v4,\r\n0 as v5\r\nfrom tkio_realtime.tkio_rlt_reg_day\r\nwhere ds=\'$ds\' and appid=\'$appid\'\r\nand ty=\'hour\'\r\n) as union_all_table\r\ngroup by appid,channelid,cid,hours\r\n) as final\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_channel_compare_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nchannelid,\r\ncid,\r\nnum_click,\r\ndupnum_click_day,\r\nnull as dupnum_click_day,\r\nnum_ins as num_install,\r\nnum_reg as dupnum_reged_day,\r\ndupnum_reg as dupnum_reged_mon,\r\nnull as num_newuser_reten_d1,\r\nnull as num_newuser_reten_d3,\r\nnull as num_newuser_reten_d7,\r\namt_income_new_user,\r\nnum_payer_new_user,\r\namt_income_all_user,\r\nnum_payer_all_user\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_dashboard_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nsum(num_click) as num_click,\r\nsum(dupnum_click_day) as dupnum_click,\r\nsum(if(channelid!=\'_default_\',amt_income_new_user,0)) as amt_income_cam,\r\nsum(if(channelid=\'_default_\',amt_income_new_user,0)) as amt_income_def,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_install_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_install_cam,\r\nnull as rate_install_std,\r\nsum(dau) as dau,\r\nsum(if(channelid=\'_default_\',num_reg,0)) as num_reged_def,\r\nsum(if(channelid!=\'_default_\',num_reg,0)) as num_reged_cam,\r\nsum(if(channelid=\'_default_\',num_ins,0)) as num_newuser_def,\r\nnull as num_newuser_reten_next_def,\r\nsum(if(channelid!=\'_default_\',num_ins,0)) as num_newuser_cam,\r\nnull as num_newuser_reten_next_cam,\r\nnull as rate_reten_oneday_std\r\ngroup by appid,hours\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_realtime_hours partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\nhours,\r\nchannelid,\r\ncid,\r\nnum_click,\r\nnum_ins,\r\ndupnum_click_day,\r\ndau,\r\namt_income_all_user,\r\nnum_payer_all_user;', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(15, 'subchannle1', 'tkio_realtime', 'insert overwrite table tkio_realtime.tkio_rpt_subchannel_summ_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\n        channelid,\r\n        subchannel,\r\n        sum(num_click) as num_click,\r\n        sum(dupnum_click_day) as dupnum_click_day,\r\n        sum(num_ins) as num_ins,\r\n        sum(dupnum_reg) as dupnum_reg\r\nfrom \r\n(select appid,\r\n       channelid,\r\n       subchannel,\r\n       sum(if( is_normal=1,1,0)) as num_click,  \r\n       count(distinct if(is_normal=1,deviceid,null)) as dupnum_click_day,\r\n       0 as num_ins,\r\n       0 as dupnum_reg\r\n    from tkio.tkio_mid_clk_normal_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\' and \r\n          channelid!=\'_default_\'  and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,cid,subchannel\r\n\r\n\r\nunion all\r\n\r\nselect appid,\r\n       channelid,\r\n       subchannel,\r\n       0 as num_click,\r\n       0 as dupnum_click_day,\r\n       0 as num_ins,\r\n       count(1) as dupnum_reg\r\n    from tkio_realtime.tkio_mid_reg_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\'  and \r\n          channelid!=\'_default_\'  and \r\n          is_normal_reg=1 and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,subchannel\r\n\r\nunion all\r\n\r\nselect appid,\r\n       channelid,\r\n       subchannel,\r\n       0 as num_click,\r\n       0 as dupnum_click_day,\r\n       count(1) as num_ins,\r\n       0 as dupnum_reg\r\n    from tkio_realtime.tkio_mid_install_day\r\n    where appid=\'$appid\' and \r\n          ds = \'$ds\'  and \r\n          channelid!=\'_default_\'  and \r\n          is_norm_install=1 and subchannel not in (\'0\',\'-1\',\'-2\') and subchannel not like \'%{%\'\r\n    group by appid,channelid,subchannel\r\n) as final\r\ngroup by channelid,subchannel\r\n', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `engine_reportetl` (`id`, `title`, `description`, `template`, `added_at`, `modify_at`) VALUES
	(16, 'lag1', 'tkio_realtime', 'from (\r\n   select appid,\r\n          channelid,\r\n          cid,\r\n          \'clk\' as ty,\r\n          \'$ds\' as clk_date,\r\n          -1 as diff_for_ins,\r\n          num_click as v1,\r\n          dupnum_click_day as v2,\r\n          dupnum_click_all as v3,\r\n          0 as v4\r\n   from tkio.tkio_rlt_clk_day\r\n   where ds=\'$ds\' and \r\n         appid=\'$appid\'\r\n         and ty=\'day\' and cid!=\'-1\'\r\n\r\nunion all\r\n\r\n    select appid,\r\n           channelid,\r\n           cid,\r\n           \'ins\' as ty,\r\n           to_date(clk_datetime) as clk_date,\r\n           datediff(to_date(ins_datetime),to_date(clk_datetime)) as diff_for_ins,\r\n           0 as v1,\r\n           0 as v2,\r\n           0 as v3,\r\n           count(1) as v4\r\n        from tkio_realtime.tkio_mid_install_day\r\n        where ds=\'$ds\' and \r\n              appid=\'$appid\' and \r\n              cid!=\'-1\'\r\n        group by appid,channelid,to_date(ins_datetime),to_date(clk_datetime),cid\r\n) as union_tb\r\n\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_lag_ins_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect \'$ds\' as dt,\r\n        channelid as campaignid,\r\n        cid,\r\n        sum(v4) as num_install,\r\n        sum(if(diff_for_ins=0,v4,0)) as num_clk_d0,\r\n        sum(if(diff_for_ins=1,v4,0)) as num_clk_d1,\r\n        sum(if(diff_for_ins=2,v4,0)) as num_clk_d2,\r\n        sum(if(diff_for_ins=3,v4,0)) as num_clk_d3,\r\n        sum(if(diff_for_ins=4,v4,0)) as num_clk_d4,\r\n        sum(if(diff_for_ins=5,v4,0)) as num_clk_d5,\r\n        sum(if(diff_for_ins=6,v4,0)) as num_clk_d6,\r\n        sum(if(diff_for_ins=7,v4,0)) as num_clk_d7,\r\n        sum(if(diff_for_ins between 8 and 14,v4,0)) as num_clk_d8_14,\r\n        sum(if(diff_for_ins>14,v4,0)) as num_clk_d15\r\n    group by channelid,cid\r\n\r\n\r\n\r\ninsert overwrite table tkio_realtime.tkio_rpt_lag_clk_day partition(ds=\'$ds\',appid=\'$appid\')\r\nselect  clk_date as dt,\r\n        channelid as campaignid,\r\n        cid,\r\n        sum(v1) as num_click,\r\n        sum(v2) as dupnum_click_day,\r\n        sum(v3) as dupnum_click_all,\r\n        sum(if(diff_for_ins=0,v4,0)) as num_ins_d0,\r\n        sum(if(diff_for_ins=1,v4,0)) as num_ins_d1,\r\n        sum(if(diff_for_ins=2,v4,0)) as num_ins_d2,\r\n        sum(if(diff_for_ins=3,v4,0)) as num_ins_d3,\r\n        sum(if(diff_for_ins=4,v4,0)) as num_ins_d4,\r\n        sum(if(diff_for_ins=5,v4,0)) as num_ins_d5,\r\n        sum(if(diff_for_ins=6,v4,0)) as num_ins_d6,\r\n        sum(if(diff_for_ins=7,v4,0)) as num_ins_d7,\r\n        sum(if(diff_for_ins between 8 and 14,v4,0)) as num_ins_d8_14,\r\n        sum(if(diff_for_ins>14,v4,0)) as num_ins_d15\r\ngroup by clk_date,channelid,cid', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
/*!40000 ALTER TABLE `engine_reportetl` ENABLE KEYS */;


-- 导出  表 tkiochange.engine_sharding 结构
CREATE TABLE IF NOT EXISTS `engine_sharding` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `num` int(11) NOT NULL,
  `added_at` datetime NOT NULL,
  `modify_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- 正在导出表  tkiochange.engine_sharding 的数据：1 rows
DELETE FROM `engine_sharding`;
/*!40000 ALTER TABLE `engine_sharding` DISABLE KEYS */;
INSERT INTO `engine_sharding` (`id`, `num`, `added_at`, `modify_at`) VALUES
	(1, 1, '2017-01-03 18:04:32', '2017-01-03 18:04:34');
/*!40000 ALTER TABLE `engine_sharding` ENABLE KEYS */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
